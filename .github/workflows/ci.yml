name: CI - Frontend & Backend Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  frontend:
    name: Frontend (Node tests)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            frontend/npm-shrinkwrap.json

      - name: Install deps
        run: npm ci

      # ปรับคำสั่งเทสต์ให้ตรงกับโปรเจกต์ของคุณ (vitest/jest)
      - name: Run unit tests
        run: |
          if [ -f vitest.config.ts ] || [ -f vitest.config.js ]; then
            npm test -- --run
          else
            npm test -- --ci --reporters=default
          fi

      # ถ้าคุณมี coverage script ให้เอาบรรทัดนี้ออกจากคอมเมนต์
      # - name: Upload coverage
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: frontend-coverage
      #     path: frontend/coverage

  backend:
    name: Backend (Maven tests with Postgres service)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: organicnow_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres123
        # รอให้ DB พร้อม
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # ถ้าคุณใช้ Spring profile สำหรับเทสต์ ตั้งค่า ENV ให้ตรงกับโปรเจกต์
      - name: Run tests
        env:
          SPRING_PROFILES_ACTIVE: test
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/organicnow_test
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres123
        run: |
          chmod +x mvnw || true
          ./mvnw -q -DskipTests=false test

      # เก็บผลลัพธ์เทสต์/รายงาน (ถ้ามี surefire reports)
      - name: Upload surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: backend/target/surefire-reports

  # รันสองงานนี้แบบขนาน และให้สรุปผลรวม
  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    steps:
      - run: echo "Frontend & Backend tests finished."
